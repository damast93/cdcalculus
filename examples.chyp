import cdcategory

gen f : 2 -> 1
gen n : 0 -> 1
gen e : 2 -> 0

# let y = n() in f(y, x)
let ex1 = ((c ; (d ; n) * id) ; (((c * c; sw[0, 2, 1, 3]) ; id * d * d * id * id0) ; f))
rewrite ex1_simp : ex1 = n * id ; f by simp(assoc,counitL,counitR,cocomm)


# match (x,y) = p in (y, x)
let ex2 = (((c * c; sw[0, 2, 1, 3]) ; id*id * id0 * id*id) ; ((c * c * c * c; sw[0, 2, 4, 6, 1, 3, 5, 7]) ; d * id * d * d * id * d * d * d))
rewrite ex2_simp : ex2 = sw ; id * id by simp(assoc,counitL,counitR,cocomm)


# let y = n() in let _u = e(x, y) in y
let ex3 = ((c ; (d ; n) * id) ; (((c * c; sw[0, 2, 1, 3]) ; (((c * c; sw[0, 2, 1, 3]) ; d * id * id0 * id * d) ; e) * id*id) ; id0 * id * d))
rewrite ex3_simp : ex3 = id * n ; id * c ; e * id by simp(assoc,counitL,counitR,cocomm)


# match (u,v) = match (x,y) = p in (y, x) in v
let ex4 = (((c * c; sw[0, 2, 1, 3]) ; (((c * c; sw[0, 2, 1, 3]) ; id*id * id0 * id*id) ; ((c * c * c * c; sw[0, 2, 4, 6, 1, 3, 5, 7]) ; d * id * d * d * id * d * d * d)) * id*id) ; d * id * d * d)
rewrite ex4_simp : ex4 = id * d by simp(assoc,counitL,counitR,cocomm)


# match (u,v) = (x, x) in (v, u)
let ex5 = ((c ; (c ; id * id0 * id * id0) * id) ; ((c * c * c; sw[0, 2, 4, 1, 3, 5]) ; d * id * d * id * d * d))
rewrite ex5_simp : ex5 = c ; sw by simp(assoc,counitL,counitR,cocomm)
